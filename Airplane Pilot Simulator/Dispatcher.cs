using System;
using static System.Console;

namespace Airplane_Pilot_Simulator
{
    #region Описание диспетчера
    /*класс «Диспетчер». Каждый диспетчер может контролировать пилота до определенного расстояния 
     * ( например, если самолет от пункта А до пункта Б должен пролететь 1000 км, то диспетчер I контролирует  от A до 500 км, а диспетчер Б от 500 до пункта Б) 
     Каждый диспетчер имеет имя (вводится с клавиатуры и передается в конструктор при создании объекта «Диспетчер»). 
*/
    #endregion
    [Serializable]
    public class Dispatcher
    {
        public string Name { get; set; } //имя диспетчера, задает игрок
        public int ChargeFine { get; set; } //начисенные штрафы
        private int WeatherAdjustments; //корректировка погоды
        int recomended; //рекомендованная высота


        //конструктор начального состояния диспетчера
        public Dispatcher(string _Name)
        {
            Name = _Name;
            ChargeFine = 0;
            #region Параметры корректировки
            //Величина «корректировки погодных условий» генерируется случайным образом один раз для каждого диспетчера при создании объекта. 
            //Значение величины N выбирается от –200 до + 200 метров.
            #endregion
            Random r = new Random();
            WeatherAdjustments = r.Next(-200, 200);
            recomended = 0;

        }

        public override string ToString()
        {
            return $"\tИмя диспетчера: {Name}\n\tРекомендованная высота: {recomended} м\n";
        }

        #region Формула корректировки
        /*Диспетчер, получив информацию о текущей скорости/высоте самолета, выводит на экран информацию о рекомендуемой высоте полета.
        Рекомендуемая высота полета вычисляется по формуле: Hp=7*Скорость (км/ч) – N, где N — «корректировка погодных условий».*/
        #endregion
        public void RecommendedFlightAltitude(int _Speed, int _Height, int _Penalties)
        {
            recomended = 7 * _Speed - WeatherAdjustments; //рекомендованная высота

            //Управление самолетом диспетчерами начинается (прекращается) при наборе (при снижении) самолетом скорости более (менее) 50 км/ч. 
            int heightDeviation = Math.Abs(recomended - _Height); //отклонение высоты

            #region Штрафы
            /*Каждый диспетчер, обнаружив разницу между рекомендуемой величиной высоты полета самолета, и текущей величиной начисляет штрафные очки:
               • Если разница в диапазоне от 300 до 600 то пилот получает 25 штрафных очков, если от 600 до 1000 — то 50 очков.  
               • Если разница превышает 1000, то объект-диспетчер генерирует исключительную ситуацию «Самолет разбился », которая должна 
            быть обработана приложением, как прекращение тренировочного полета с соответствующей информацией на экране.
             • Так же недопустимо, чтобы самолет в любой момент времени имел нулевую высоту и нулевую скорость (если это случилось — исключение
            «Самолет разбился» генерирует диспетчер). Кроме момента начала взлета и посадки (высота и скорость равны нулю)*/
            #endregion

            if (heightDeviation > 300 && heightDeviation <= 600)
                ChargeFine += 25;

            else if (heightDeviation > 600 && heightDeviation <= 1000)
                ChargeFine += 50;

            else if (heightDeviation > 1000)
            {
                throw new AirplaneCrushed("Самолет разбился");// Генерирует исключение «Самолет разбился»
            }
            if (_Speed < 0 || _Height < 0)
            {
                throw new AirplaneCrushed("Самолет разбился");// Генерирует исключение «Самолет разбился»                                                  
            }
            
            // • При попытке превысить максимальную скорость диспетчер штрафует пилота на 100 очков и требует немедленно снизить скорость.
            if (_Speed > 1000)
            {
                ChargeFine += 100;
                SetCursorPosition(30, 2);
                WriteLine($" Диспетчер {Name}: Немедленно снизить скорость!");
                Beep(); //звуковой сигнал
            }
            
            /* • Если пилот, не завершив полет, набирает 1000 штрафных очков по сумме от обоих диспетчеров — то генерируется 
             исключительная ситуация «Непригоден к полетам», которая также обрабатывается приложением.*/
            if (_Penalties >= 1000)
                throw new Unsuitable("Непригоден к полетам"); // Генерируется исключение «Непригоден к полетам»
            //Clear();
            SetCursorPosition(20,5);
            WriteLine($"Диспетчер {Name}: Рекомендуемая высота полета: {recomended} м. Штрафы: {ChargeFine} ");
        }
    }
    class AirplaneCrushed : Exception
    {
        public AirplaneCrushed(string message)
            : base(message)
        { }
    }
    class Unsuitable : Exception
    {
        public Unsuitable(string message)
            : base(message)
        { }
    }
}
